@model DashboardVM

@{
    ViewData["Title"] = "Editar Dashboard";
    
    // Opções para os eixos dos gráficos e campo dos cartões
    var opcoesEixos = new List<SelectListItem>
    {
        new SelectListItem { Value = "DataMovimentacao", Text = "Data" },
        new SelectListItem { Value = "Valor", Text = "Valor" },
        new SelectListItem { Value = "Tipo", Text = "Tipo" },
        new SelectListItem { Value = "Categoria", Text = "Categoria" }
    };
    
    // Opções para tipos de gráfico
    var opcoesTipoGrafico = new List<SelectListItem>
    {
        new SelectListItem { Value = "Barra", Text = "Barra" },
        new SelectListItem { Value = "Pizza", Text = "Pizza" },
        new SelectListItem { Value = "Linha", Text = "Linha" }
    };
    
    // Opções para tipos de agregação
    var opcoesAgregacao = new List<SelectListItem>
    {
        new SelectListItem { Value = "Soma", Text = "Soma" },
        new SelectListItem { Value = "Media", Text = "Média" },
        new SelectListItem { Value = "Max", Text = "Máximo" },
        new SelectListItem { Value = "Min", Text = "Mínimo" },
        new SelectListItem { Value = "Contagem", Text = "Contagem" }
    };
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>

<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="editar_dashboard">
        <h2 class="text-center mb-4">Editar Dashboard</h2>

        <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="Id" />
            <div class="mb-4">
                <label asp-for="Nome" class="form-label"></label>
                <input asp-for="Nome" class="form-control rounded-3" />
                <span asp-validation-for="Nome" class="text-warning"></span>
            </div>

            <div class="mb-4">
                <label asp-for="ExtratoId" class="form-label">Extrato</label>
                <select asp-for="ExtratoId" asp-items="Model.ExtratosDisponiveis" class="form-control rounded-3"></select>
            </div>

            <div class="row">
                <div class="col-md-6 mb-4">
                    <!-- Título e botão de Gráficos alinhados -->
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h4 class="mb-0">Gráficos</h4>
                        <button type="button" class="btn btn-light rounded-pill" onclick="adicionarGrafico()">+ Adicionar Gráfico</button>
                    </div>
                    <div class="table-responsive border border-primary rounded shadow-sm p-2 bg-white">
                        <table class="table table-sm text-center align-middle mb-0" id="tabelaGraficos">
                            <colgroup>
                                <col style="width: 30%">
                                <col style="width: 26%">
                                <col style="width: 26%">
                                <col style="width: 15%">
                                <col style="width: 1%">
                                <col style="width: 1%">
                            </colgroup>
                            <thead class="bg-turquesa text-dark rounded-top">
                                <tr>
                                    <th>Título</th>
                                    <th>Eixo X</th>
                                    <th>Eixo Y</th>
                                    <th>Tipo</th>
                                    <th>Cor</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody class="bg-azul-gelo">
                                @for (int i = 0; i < Model.Graficos.Count; i++)
                                {
                                    <tr>
                                        <td><input name="Graficos[@i].Titulo" value="@Model.Graficos[i].Titulo" class="form-control form-control-sm rounded" /></td>
                                        <td>
                                            <select name="Graficos[@i].Campo1" class="form-control form-control-sm rounded">
                                                @foreach (var opcao in opcoesEixos)
                                                {
                                                    <option value="@opcao.Value" selected="@(opcao.Value == Model.Graficos[i].Campo1)">@opcao.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <select name="Graficos[@i].Campo2" class="form-control form-control-sm rounded">
                                                @foreach (var opcao in opcoesEixos)
                                                {
                                                    <option value="@opcao.Value" selected="@(opcao.Value == Model.Graficos[i].Campo2)">@opcao.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <select name="Graficos[@i].Tipo" class="form-control form-control-sm rounded">
                                                @foreach (var opcao in opcoesTipoGrafico)
                                                {
                                                    <option value="@opcao.Value" selected="@(opcao.Value == Model.Graficos[i].Tipo)">@opcao.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td><input type="color" name="Graficos[@i].Cor" value="@Model.Graficos[i].Cor" class="form-control form-control-sm rounded" /></td>
                                        <td><button type="button" class="btn btn-danger btn-sm" onclick="removerLinha(this)">🗑️</button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="col-md-6 mb-4">
                    <!-- Título e botão de Cartões alinhados -->
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h4 class="mb-0">Cartões</h4>
                        <button type="button" class="btn btn-light rounded-pill" onclick="adicionarCartao()">+ Adicionar Cartão</button>
                    </div>
                    <div class="table-responsive border border-primary rounded shadow-sm p-2 bg-white">
                        <table class="table table-sm text-center align-middle mb-0" id="tabelaCartoes">
                            <thead class="bg-turquesa text-dark">
                                <tr>
                                    <th>Nome</th>
                                    <th>Campo</th>
                                    <th>Agregação</th>
                                    <th>Cor</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody class="bg-azul-gelo">
                                @for (int i = 0; i < Model.Cartoes.Count; i++)
                                {
                                    <tr>
                                        <td><input name="Cartoes[@i].Nome" value="@Model.Cartoes[i].Nome" class="form-control form-control-sm rounded" /></td>
                                        <td>
                                            <select name="Cartoes[@i].Campo" class="form-control form-control-sm rounded">
                                                @foreach (var opcao in opcoesEixos)
                                                {
                                                    <option value="@opcao.Value" selected="@(opcao.Value == Model.Cartoes[i].Campo)">@opcao.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <select name="Cartoes[@i].TipoAgregacao" class="form-control form-control-sm rounded">
                                                @foreach (var opcao in opcoesAgregacao)
                                                {
                                                    <option value="@opcao.Value" selected="@(opcao.Value == Model.Cartoes[i].TipoAgregacao)">@opcao.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td><input type="color" name="Cartoes[@i].Cor" value="@Model.Cartoes[i].Cor" class="form-control form-control-sm rounded" /></td>
                                        <td><button type="button" class="btn btn-danger btn-sm" onclick="removerLinha(this)">🗑️</button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="mt-4 d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-light rounded-pill">Voltar</a>
                <button type="submit" class="btn btn-light rounded-pill">Salvar Alterações</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function removerLinha(botao) {
            const linha = botao.closest("tr");
            linha.remove();
        }

        function adicionarGrafico() {
            const tabela = document.querySelector("#tabelaGraficos tbody");
            const index = tabela.rows.length;
            const novaLinha = `
                <tr>
                    <td><input name="Graficos[${index}].Titulo" class="form-control form-control-sm rounded" /></td>
                    <td>
                        <select name="Graficos[${index}].Campo1" class="form-control form-control-sm rounded">
                            <option value="DataMovimentacao">Data</option>
                            <option value="Valor">Valor</option>
                            <option value="Tipo">Tipo</option>
                            <option value="Categoria">Categoria</option>
                        </select>
                    </td>
                    <td>
                        <select name="Graficos[${index}].Campo2" class="form-control form-control-sm rounded">
                            <option value="DataMovimentacao">Data</option>
                            <option value="Valor" selected>Valor</option>
                            <option value="Tipo">Tipo</option>
                            <option value="Categoria">Categoria</option>
                        </select>
                    </td>
                    <td>
                        <select name="Graficos[${index}].Tipo" class="form-control form-control-sm rounded">
                            <option value="Barra" selected>Barra</option>
                            <option value="Pizza">Pizza</option>
                            <option value="Linha">Linha</option>
                        </select>
                    </td>
                    <td><input type="color" name="Graficos[${index}].Cor" class="form-control form-control-sm rounded" value="#3366cc" /></td>
                    <td><button type="button" class="btn btn-danger btn-sm" onclick="removerLinha(this)">🗑️</button></td>
                </tr>`;
            tabela.insertAdjacentHTML("beforeend", novaLinha);
        }

        function adicionarCartao() {
            const tabela = document.querySelector("#tabelaCartoes tbody");
            const index = tabela.rows.length;
            const novaLinha = `
                <tr>
                    <td><input name="Cartoes[${index}].Nome" class="form-control form-control-sm rounded" /></td>
                    <td>
                        <select name="Cartoes[${index}].Campo" class="form-control form-control-sm rounded">
                            <option value="DataMovimentacao">Data</option>
                            <option value="Valor" selected>Valor</option>
                            <option value="Tipo">Tipo</option>
                            <option value="Categoria">Categoria</option>
                        </select>
                    </td>
                    <td>
                        <select name="Cartoes[${index}].TipoAgregacao" class="form-control form-control-sm rounded">
                            <option value="Soma" selected>Soma</option>
                            <option value="Media">Média</option>
                            <option value="Max">Máximo</option>
                            <option value="Min">Mínimo</option>
                            <option value="Contagem">Contagem</option>
                        </select>
                    </td>
                    <td><input type="color" name="Cartoes[${index}].Cor" class="form-control form-control-sm rounded" value="#3366cc" /></td>
                    <td><button type="button" class="btn btn-danger btn-sm" onclick="removerLinha(this)">🗑️</button></td>
                </tr>`;
            tabela.insertAdjacentHTML("beforeend", novaLinha);
        }
    </script>
}