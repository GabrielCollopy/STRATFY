@model STRATFY.Models.ExtratoEdicaoViewModel

@{
    ViewData["Title"] = "Editar Extrato";
    var categorias = ViewData["CategoriaId"] as SelectList;
    var tipos = new List<SelectListItem>
    {
        new SelectListItem { Value = "Débito", Text = "Débito" },
        new SelectListItem { Value = "Crédito", Text = "Crédito" },
        new SelectListItem { Value = "Dinheiro", Text = "Dinheiro" },
        new SelectListItem { Value = "Pix", Text = "Pix" }
    };
}

<div class="d-flex justify-content-center align-items-center" style="min-height: 90vh;">
    <div class="p-5 shadow" style="background-color: #03045e; width: 100%; max-width: 1250px; color: white; border-radius: 24px;">
        <h2 class="text-center mb-4">Editar Extrato</h2>

        <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="ExtratoId" />

            <div class="mb-3">
                <label asp-for="NomeExtrato" class="form-label">Nome do Extrato</label>
                <input asp-for="NomeExtrato" class="form-control rounded-3" />
                <span asp-validation-for="NomeExtrato" class="text-warning"></span>
            </div>

            <div class="mb-4">
                <label asp-for="DataCriacao" class="form-label">Data de Criação</label>
                <input asp-for="DataCriacao" class="form-control rounded-3" type="date" />
                <span asp-validation-for="DataCriacao" class="text-warning"></span>
            </div>

            <h4 class="text-center">Movimentações</h4>
            <div class="table-responsive rounded" style="background-color: white; color: black; padding: 0.5rem; border-radius: 16px; overflow-x: auto;">
                <table class="table table-bordered align-middle mb-0" id="movimentacoes-table" style="table-layout: auto; width: 100%;">
                    <datalist id="categorias-lista">
                        @foreach (var categoria in categorias)
                        {
                            <option value="@categoria.Text"></option>
                        }
                    </datalist>

                    <thead class="table-light">
                        <tr>
                            <th>Descrição</th>
                            <th>Valor</th>
                            <th>Tipo</th>
                            <th>Categoria</th>
                            <th>Data</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Movimentacoes.Count; i++)
                        {
                            <tr>
                                <input type="hidden" name="Movimentacoes[@i].Id" value="@Model.Movimentacoes[i].Id" />
                                <input type="hidden" name="Movimentacoes[@i].ExtratoId" value="@Model.ExtratoId" />

                                <td><input class="form-control rounded-3 conteudo" name="Movimentacoes[@i].Descricao" value="@Model.Movimentacoes[i].Descricao" /></td>
                                <td><input class="form-control rounded-3" name="Movimentacoes[@i].Valor" value="@Model.Movimentacoes[i].Valor" /></td>
                                <td>
                                    <select name="Movimentacoes[@i].Tipo" class="form-control rounded-3 conteudo">
                                        @foreach (var item in tipos)
                                        {
                                            <option value="@item.Value" selected="@(item.Value == Model.Movimentacoes[i].Tipo)">
                                                @item.Text
                                            </option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <input list="categorias-lista" class="form-control rounded-3 conteudo"
                                           name="Movimentacoes[@i].Categoria.Nome"
                                           value="@Model.Movimentacoes[i].Categoria?.Nome" />
                                </td>

                                <td>
                                    <input class="form-control rounded-3" type="date" name="Movimentacoes[@i].DataMovimentacao"
                                           value="@Model.Movimentacoes[i].DataMovimentacao?.ToString("yyyy-MM-dd")" />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="removerLinha(this)">Remover</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="text-end mt-3">
                <button type="button" class="btn btn-light rounded-pill" onclick="adicionarLinha()">+ Adicionar Movimentação</button>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <a asp-action="Index" class="btn btn-light rounded-pill">Voltar</a>
                <button type="submit" class="btn btn-light rounded-pill">Salvar Alterações</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function removerLinha(botao) {
            const linha = $(botao).closest('tr');
            linha.remove();
            reindexarTabela();
        }

        function reindexarTabela() {
            const linhas = $('#movimentacoes-table tbody tr');
            linhas.each(function (index) {
                $(this).find('input, select').each(function () {
                    const name = $(this).attr('name');
                    if (name) {
                        const novoName = name.replace(/Movimentacoes\[\d+\]/, `Movimentacoes[${index}]`);
                        $(this).attr('name', novoName);
                    }
                });
            });

            indice = linhas.length; // atualiza o índice para o próximo adicionarLinha
        }


        let indice = @Model.Movimentacoes.Count;

        function adicionarLinha() {
            const tabela = document.querySelector('#movimentacoes-table tbody');
            const novaLinha = document.createElement('tr');

            novaLinha.innerHTML = `
                <input type="hidden" name="Movimentacoes[${indice}].Id" value="0" />
                <input type="hidden" name="Movimentacoes[${indice}].ExtratoId" value="@Model.ExtratoId" />
                <td><input class="form-control rounded-3" name="Movimentacoes[${indice}].Descricao" /></td>
                <td><input class="form-control rounded-3" name="Movimentacoes[${indice}].Valor" /></td>
                <td>
                    <select class="form-control rounded-3 conteudo" name="Movimentacoes[${indice}].Tipo">
                        <option value="Débito">Débito</option>
                        <option value="Crédito">Crédito</option>
                        <option value="Dinheiro">Dinheiro</option>
                        <option value="Pix">Pix</option>
                    </select>
                </td>
                <td>
            <input list="categorias-lista" class="form-control rounded-3" name="Movimentacoes[${indice}].Categoria.Nome" />
                 </td>

                <td><input class="form-control rounded-3" type="date" name="Movimentacoes[${indice}].DataMovimentacao" /></td>
                <td><button type="button" class="btn btn-outline-danger btn-sm" onclick="removerLinha(this)">Remover</button></td>
            `;

            tabela.appendChild(novaLinha);
            indice++;
        }
    </script>
}
