@model STRATFY.Models.MovimentacaoLoteViewModel

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>

@{
    ViewData["Title"] = "Cadastrar Movimentações";
    var categorias = (SelectList)ViewData["CategoriaId"];
    var tipos = new List<SelectListItem>
{
    new SelectListItem { Value = "Débito", Text = "Débito" },
    new SelectListItem { Value = "Crédito", Text = "Crédito" },
    new SelectListItem { Value = "Dinheiro", Text = "Dinheiro" },
    new SelectListItem { Value = "Pix", Text = "Pix" }
};
}

<h2>Cadastrar Movimentações para o Extrato: @Model.NomeExtrato</h2>
<hr />

<form asp-action="Create" method="post">
    <input type="hidden" asp-for="ExtratoId" />
    <input type="hidden" asp-for="NomeExtrato" />

    <table class="table table-bordered" id="tabela-movimentacoes">
        <thead>
            <tr>
                <th>Categoria</th>
                <th>Descrição</th>
                <th>Tipo</th>
                <th>Valor</th>
                <th>Data</th>
                <th>Ação</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Movimentacoes.Count; i++)
            {
                <tr>
                    <td>
                        <select name="Movimentacoes[@i].CategoriaId" class="form-control">
                            @foreach (var item in categorias)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input name="Movimentacoes[@i].Descricao" class="form-control" />
                    </td>
                    <td>
                        <select name="Movimentacoes[@i].Tipo" class="form-control">
                            @foreach (var item in tipos)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input name="Movimentacoes[@i].Valor" class="form-control" />
                    </td>
                    <td>
                        <input name="Movimentacoes[@i].DataMovimentacao" type="date" class="form-control" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removerLinha(this)">Remover</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-secondary" onclick="adicionarLinha()">Adicionar Linha</button>
    <button type="submit" class="btn btn-primary">Salvar Movimentações</button>
</form>

@section Scripts {
    <script>
        function adicionarLinha() {
            const tabela = document.querySelector("#tabela-movimentacoes tbody");
            const index = tabela.rows.length;

            const novaLinha = `
                <tr>
                    <td>
                        <select name="Movimentacoes[${index}].CategoriaId" class="form-control">
        @foreach (var item in categorias)
        {
            <text>
                                        <option value="@item.Value">@item.Text</option>
            </text>
        }
                        </select>
                    </td>
                    <td><input name="Movimentacoes[${index}].Descricao" class="form-control" /></td>
                            <td>
                                <select name="Movimentacoes[${index}].Tipo" class="form-control">
                                    <option value="Débito">Débito</option>
                                    <option value="Crédito">Crédito</option>
                                    <option value="Dinheiro">Dinheiro</option>
                                    <option value="Pix">Pix</option>
                                </select>
                            </td>

                    <td><input name="Movimentacoes[${index}].Valor" class="form-control" /></td>
                    <td><input name="Movimentacoes[${index}].DataMovimentacao" type="date" class="form-control" /></td>
                    <td><button type="button" class="btn btn-danger btn-sm" onclick="removerLinha(this)">Remover</button></td>
                </tr>
            `;

            tabela.insertAdjacentHTML('beforeend', novaLinha);
        }

        function removerLinha(botao) {
            const linha = botao.closest('tr');
            linha.remove();
        }
    </script>
}











@* @model STRATFY.Models.Movimentacao

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Movimentacao</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Extrato" class="control-label"></label>
                <input asp-for="Extrato" class="form-control" readonly value="@(ViewBag.NomeExtrato)" />
            </div>
            <div class="form-group">
                <label asp-for="CategoriaId" class="control-label"></label>
                <select asp-for="CategoriaId" class="form-control" asp-items="ViewBag.CategoriaId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tipo" class="control-label"></label>
                <input asp-for="Tipo" class="form-control" />
                <span asp-validation-for="Tipo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Valor" class="control-label"></label>
                <input asp-for="Valor" class="form-control" />
                <span asp-validation-for="Valor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataMovimentacao" class="control-label"></label>
                <input asp-for="DataMovimentacao" type="date" class="form-control" />
                <span asp-validation-for="DataMovimentacao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <input type="hidden" asp-for="ExtratoId" />
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/localization/messages_pt_BR.min.js"></script>
    <script>
        // Isso faz a validação aceitar vírgula como separador decimal
        $.validator.methods.number = function (value, element) {
            value = value.replace(",", ".");
            return this.optional(element) || !isNaN(value);
        };
    </script>

}*@

