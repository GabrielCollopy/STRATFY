@model STRATFY.Models.Grafico

@{
    ViewData["Title"] = "Edit";
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>

<h1>Alterar</h1>

<h4>Grafico</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="DashboardId" class="control-label"></label>
                <select asp-for="DashboardId" class="form-control" asp-items="ViewBag.DashboardId"></select>
                <span asp-validation-for="DashboardId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tipo" class="control-label"></label>
                <input asp-for="Tipo" class="form-control" />
                <span asp-validation-for="Tipo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Campo1" class="control-label"></label>
                <input asp-for="Campo1" class="form-control" />
                <span asp-validation-for="Campo1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Campo2" class="control-label"></label>
                <input asp-for="Campo2" class="form-control" />
                <span asp-validation-for="Campo2" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cor" class="control-label"></label>
                <div class="input-group align-items-center">
                    <input asp-for="Cor" class="form-control" id="corTexto" style="flex: 1;" />
                    <input type="color" id="corPicker" class="form-control-color" style="width: 40px; height: 38px; border: none; padding: 0; margin-left: 6px; cursor: pointer;" />
                </div>
                <span asp-validation-for="Cor" class="text-danger"></span>
            </div>


            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="AtivarLegenda" /> @Html.DisplayNameFor(model => model.AtivarLegenda)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const corTexto = document.getElementById("corTexto");
        const corPicker = document.getElementById("corPicker");

        // Quando mudar no color picker, atualiza o campo de texto
        corPicker.addEventListener("input", function () {
            corTexto.value = corPicker.value;
        });

        // Quando carregar a página, sincroniza o picker com o valor atual (se houver)
        window.addEventListener("DOMContentLoaded", function () {
            if (corTexto.value) {
                corPicker.value = corTexto.value;
            }
        });
    </script>
}
